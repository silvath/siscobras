//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.510
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mdlDataBaseData.Tabelas {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class XsdTbRelatoriosCamposBDRelatorios : DataSet {
        
        private tbRelatoriosCamposBDRelatoriosDataTable tabletbRelatoriosCamposBDRelatorios;
        
        public XsdTbRelatoriosCamposBDRelatorios() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected XsdTbRelatoriosCamposBDRelatorios(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbRelatoriosCamposBDRelatorios"] != null)) {
                    this.Tables.Add(new tbRelatoriosCamposBDRelatoriosDataTable(ds.Tables["tbRelatoriosCamposBDRelatorios"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbRelatoriosCamposBDRelatoriosDataTable tbRelatoriosCamposBDRelatorios {
            get {
                return this.tabletbRelatoriosCamposBDRelatorios;
            }
        }
        
        public override DataSet Clone() {
            XsdTbRelatoriosCamposBDRelatorios cln = ((XsdTbRelatoriosCamposBDRelatorios)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tbRelatoriosCamposBDRelatorios"] != null)) {
                this.Tables.Add(new tbRelatoriosCamposBDRelatoriosDataTable(ds.Tables["tbRelatoriosCamposBDRelatorios"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletbRelatoriosCamposBDRelatorios = ((tbRelatoriosCamposBDRelatoriosDataTable)(this.Tables["tbRelatoriosCamposBDRelatorios"]));
            if ((this.tabletbRelatoriosCamposBDRelatorios != null)) {
                this.tabletbRelatoriosCamposBDRelatorios.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "XsdTbRelatoriosCamposBDRelatorios";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XsdTbRelatoriosCamposBDRelatorios.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletbRelatoriosCamposBDRelatorios = new tbRelatoriosCamposBDRelatoriosDataTable();
            this.Tables.Add(this.tabletbRelatoriosCamposBDRelatorios);
        }
        
        private bool ShouldSerializetbRelatoriosCamposBDRelatorios() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tbRelatoriosCamposBDRelatoriosRowChangeEventHandler(object sender, tbRelatoriosCamposBDRelatoriosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatoriosCamposBDRelatoriosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnnIdTipoRelatorio;
            
            private DataColumn columnnIdCampoBD;
            
            private DataColumn columnstrNomeCampoNoRelatorio;
            
            private DataColumn columnbCallbackClicavel;
            
            internal tbRelatoriosCamposBDRelatoriosDataTable() : 
                    base("tbRelatoriosCamposBDRelatorios") {
                this.InitClass();
            }
            
            internal tbRelatoriosCamposBDRelatoriosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn nIdTipoRelatorioColumn {
                get {
                    return this.columnnIdTipoRelatorio;
                }
            }
            
            internal DataColumn nIdCampoBDColumn {
                get {
                    return this.columnnIdCampoBD;
                }
            }
            
            internal DataColumn strNomeCampoNoRelatorioColumn {
                get {
                    return this.columnstrNomeCampoNoRelatorio;
                }
            }
            
            internal DataColumn bCallbackClicavelColumn {
                get {
                    return this.columnbCallbackClicavel;
                }
            }
            
            public tbRelatoriosCamposBDRelatoriosRow this[int index] {
                get {
                    return ((tbRelatoriosCamposBDRelatoriosRow)(this.Rows[index]));
                }
            }
            
            public event tbRelatoriosCamposBDRelatoriosRowChangeEventHandler tbRelatoriosCamposBDRelatoriosRowChanged;
            
            public event tbRelatoriosCamposBDRelatoriosRowChangeEventHandler tbRelatoriosCamposBDRelatoriosRowChanging;
            
            public event tbRelatoriosCamposBDRelatoriosRowChangeEventHandler tbRelatoriosCamposBDRelatoriosRowDeleted;
            
            public event tbRelatoriosCamposBDRelatoriosRowChangeEventHandler tbRelatoriosCamposBDRelatoriosRowDeleting;
            
            public void AddtbRelatoriosCamposBDRelatoriosRow(tbRelatoriosCamposBDRelatoriosRow row) {
                this.Rows.Add(row);
            }
            
            public tbRelatoriosCamposBDRelatoriosRow AddtbRelatoriosCamposBDRelatoriosRow(int nIdTipoRelatorio, int nIdCampoBD, string strNomeCampoNoRelatorio, bool bCallbackClicavel) {
                tbRelatoriosCamposBDRelatoriosRow rowtbRelatoriosCamposBDRelatoriosRow = ((tbRelatoriosCamposBDRelatoriosRow)(this.NewRow()));
                rowtbRelatoriosCamposBDRelatoriosRow.ItemArray = new object[] {
                        nIdTipoRelatorio,
                        nIdCampoBD,
                        strNomeCampoNoRelatorio,
                        bCallbackClicavel};
                this.Rows.Add(rowtbRelatoriosCamposBDRelatoriosRow);
                return rowtbRelatoriosCamposBDRelatoriosRow;
            }
            
            public tbRelatoriosCamposBDRelatoriosRow FindBynIdTipoRelatorionIdCampoBD(int nIdTipoRelatorio, int nIdCampoBD) {
                return ((tbRelatoriosCamposBDRelatoriosRow)(this.Rows.Find(new object[] {
                            nIdTipoRelatorio,
                            nIdCampoBD})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tbRelatoriosCamposBDRelatoriosDataTable cln = ((tbRelatoriosCamposBDRelatoriosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tbRelatoriosCamposBDRelatoriosDataTable();
            }
            
            internal void InitVars() {
                this.columnnIdTipoRelatorio = this.Columns["nIdTipoRelatorio"];
                this.columnnIdCampoBD = this.Columns["nIdCampoBD"];
                this.columnstrNomeCampoNoRelatorio = this.Columns["strNomeCampoNoRelatorio"];
                this.columnbCallbackClicavel = this.Columns["bCallbackClicavel"];
            }
            
            private void InitClass() {
                this.columnnIdTipoRelatorio = new DataColumn("nIdTipoRelatorio", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdTipoRelatorio);
                this.columnnIdCampoBD = new DataColumn("nIdCampoBD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdCampoBD);
                this.columnstrNomeCampoNoRelatorio = new DataColumn("strNomeCampoNoRelatorio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnstrNomeCampoNoRelatorio);
                this.columnbCallbackClicavel = new DataColumn("bCallbackClicavel", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbCallbackClicavel);
                this.Constraints.Add(new UniqueConstraint("XsdTbRelatoriosCamposBDRelatoriosKey1", new DataColumn[] {
                                this.columnnIdTipoRelatorio,
                                this.columnnIdCampoBD}, true));
                this.columnnIdTipoRelatorio.AllowDBNull = false;
                this.columnnIdCampoBD.AllowDBNull = false;
            }
            
            public tbRelatoriosCamposBDRelatoriosRow NewtbRelatoriosCamposBDRelatoriosRow() {
                return ((tbRelatoriosCamposBDRelatoriosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tbRelatoriosCamposBDRelatoriosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tbRelatoriosCamposBDRelatoriosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbRelatoriosCamposBDRelatoriosRowChanged != null)) {
                    this.tbRelatoriosCamposBDRelatoriosRowChanged(this, new tbRelatoriosCamposBDRelatoriosRowChangeEvent(((tbRelatoriosCamposBDRelatoriosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbRelatoriosCamposBDRelatoriosRowChanging != null)) {
                    this.tbRelatoriosCamposBDRelatoriosRowChanging(this, new tbRelatoriosCamposBDRelatoriosRowChangeEvent(((tbRelatoriosCamposBDRelatoriosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbRelatoriosCamposBDRelatoriosRowDeleted != null)) {
                    this.tbRelatoriosCamposBDRelatoriosRowDeleted(this, new tbRelatoriosCamposBDRelatoriosRowChangeEvent(((tbRelatoriosCamposBDRelatoriosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbRelatoriosCamposBDRelatoriosRowDeleting != null)) {
                    this.tbRelatoriosCamposBDRelatoriosRowDeleting(this, new tbRelatoriosCamposBDRelatoriosRowChangeEvent(((tbRelatoriosCamposBDRelatoriosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetbRelatoriosCamposBDRelatoriosRow(tbRelatoriosCamposBDRelatoriosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatoriosCamposBDRelatoriosRow : DataRow {
            
            private tbRelatoriosCamposBDRelatoriosDataTable tabletbRelatoriosCamposBDRelatorios;
            
            internal tbRelatoriosCamposBDRelatoriosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbRelatoriosCamposBDRelatorios = ((tbRelatoriosCamposBDRelatoriosDataTable)(this.Table));
            }
            
            public int nIdTipoRelatorio {
                get {
                    return ((int)(this[this.tabletbRelatoriosCamposBDRelatorios.nIdTipoRelatorioColumn]));
                }
                set {
                    this[this.tabletbRelatoriosCamposBDRelatorios.nIdTipoRelatorioColumn] = value;
                }
            }
            
            public int nIdCampoBD {
                get {
                    return ((int)(this[this.tabletbRelatoriosCamposBDRelatorios.nIdCampoBDColumn]));
                }
                set {
                    this[this.tabletbRelatoriosCamposBDRelatorios.nIdCampoBDColumn] = value;
                }
            }
            
            public string strNomeCampoNoRelatorio {
                get {
                    try {
                        return ((string)(this[this.tabletbRelatoriosCamposBDRelatorios.strNomeCampoNoRelatorioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatoriosCamposBDRelatorios.strNomeCampoNoRelatorioColumn] = value;
                }
            }
            
            public bool bCallbackClicavel {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatoriosCamposBDRelatorios.bCallbackClicavelColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatoriosCamposBDRelatorios.bCallbackClicavelColumn] = value;
                }
            }
            
            public bool IsstrNomeCampoNoRelatorioNull() {
                return this.IsNull(this.tabletbRelatoriosCamposBDRelatorios.strNomeCampoNoRelatorioColumn);
            }
            
            public void SetstrNomeCampoNoRelatorioNull() {
                this[this.tabletbRelatoriosCamposBDRelatorios.strNomeCampoNoRelatorioColumn] = System.Convert.DBNull;
            }
            
            public bool IsbCallbackClicavelNull() {
                return this.IsNull(this.tabletbRelatoriosCamposBDRelatorios.bCallbackClicavelColumn);
            }
            
            public void SetbCallbackClicavelNull() {
                this[this.tabletbRelatoriosCamposBDRelatorios.bCallbackClicavelColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatoriosCamposBDRelatoriosRowChangeEvent : EventArgs {
            
            private tbRelatoriosCamposBDRelatoriosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tbRelatoriosCamposBDRelatoriosRowChangeEvent(tbRelatoriosCamposBDRelatoriosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tbRelatoriosCamposBDRelatoriosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
