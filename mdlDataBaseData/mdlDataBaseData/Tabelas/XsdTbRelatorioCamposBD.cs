//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.510
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mdlDataBaseData.Tabelas {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class XsdTbRelatorioCamposBD : DataSet {
        
        private tbRelatorioCamposBDDataTable tabletbRelatorioCamposBD;
        
        public XsdTbRelatorioCamposBD() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected XsdTbRelatorioCamposBD(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbRelatorioCamposBD"] != null)) {
                    this.Tables.Add(new tbRelatorioCamposBDDataTable(ds.Tables["tbRelatorioCamposBD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbRelatorioCamposBDDataTable tbRelatorioCamposBD {
            get {
                return this.tabletbRelatorioCamposBD;
            }
        }
        
        public override DataSet Clone() {
            XsdTbRelatorioCamposBD cln = ((XsdTbRelatorioCamposBD)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tbRelatorioCamposBD"] != null)) {
                this.Tables.Add(new tbRelatorioCamposBDDataTable(ds.Tables["tbRelatorioCamposBD"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletbRelatorioCamposBD = ((tbRelatorioCamposBDDataTable)(this.Tables["tbRelatorioCamposBD"]));
            if ((this.tabletbRelatorioCamposBD != null)) {
                this.tabletbRelatorioCamposBD.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "XsdTbRelatorioCamposBD";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XsdTbRelatorioCamposBD.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletbRelatorioCamposBD = new tbRelatorioCamposBDDataTable();
            this.Tables.Add(this.tabletbRelatorioCamposBD);
        }
        
        private bool ShouldSerializetbRelatorioCamposBD() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tbRelatorioCamposBDRowChangeEventHandler(object sender, tbRelatorioCamposBDRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioCamposBDDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnnIdExportador;
            
            private DataColumn columnnIdRelatorio;
            
            private DataColumn columnnIdCampoBD;
            
            private DataColumn columnnIdTipo;
            
            private DataColumn columnnZIndex;
            
            private DataColumn columnnGrupo;
            
            private DataColumn columnnX1;
            
            private DataColumn columnnY1;
            
            private DataColumn columnnX2;
            
            private DataColumn columnnY2;
            
            private DataColumn columnnCorR;
            
            private DataColumn columnnCorG;
            
            private DataColumn columnnCorB;
            
            private DataColumn columnstrFonteFamilia;
            
            private DataColumn columnnFonteSize;
            
            private DataColumn columnbFonteNegrito;
            
            private DataColumn columnbFonteItalico;
            
            private DataColumn columnbFonteStrikeOut;
            
            private DataColumn columnbFonteSublinhada;
            
            private DataColumn columnbVisivelImpressao;
            
            private DataColumn columnnCorRGB;
            
            internal tbRelatorioCamposBDDataTable() : 
                    base("tbRelatorioCamposBD") {
                this.InitClass();
            }
            
            internal tbRelatorioCamposBDDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn nIdExportadorColumn {
                get {
                    return this.columnnIdExportador;
                }
            }
            
            internal DataColumn nIdRelatorioColumn {
                get {
                    return this.columnnIdRelatorio;
                }
            }
            
            internal DataColumn nIdCampoBDColumn {
                get {
                    return this.columnnIdCampoBD;
                }
            }
            
            internal DataColumn nIdTipoColumn {
                get {
                    return this.columnnIdTipo;
                }
            }
            
            internal DataColumn nZIndexColumn {
                get {
                    return this.columnnZIndex;
                }
            }
            
            internal DataColumn nGrupoColumn {
                get {
                    return this.columnnGrupo;
                }
            }
            
            internal DataColumn nX1Column {
                get {
                    return this.columnnX1;
                }
            }
            
            internal DataColumn nY1Column {
                get {
                    return this.columnnY1;
                }
            }
            
            internal DataColumn nX2Column {
                get {
                    return this.columnnX2;
                }
            }
            
            internal DataColumn nY2Column {
                get {
                    return this.columnnY2;
                }
            }
            
            internal DataColumn nCorRColumn {
                get {
                    return this.columnnCorR;
                }
            }
            
            internal DataColumn nCorGColumn {
                get {
                    return this.columnnCorG;
                }
            }
            
            internal DataColumn nCorBColumn {
                get {
                    return this.columnnCorB;
                }
            }
            
            internal DataColumn strFonteFamiliaColumn {
                get {
                    return this.columnstrFonteFamilia;
                }
            }
            
            internal DataColumn nFonteSizeColumn {
                get {
                    return this.columnnFonteSize;
                }
            }
            
            internal DataColumn bFonteNegritoColumn {
                get {
                    return this.columnbFonteNegrito;
                }
            }
            
            internal DataColumn bFonteItalicoColumn {
                get {
                    return this.columnbFonteItalico;
                }
            }
            
            internal DataColumn bFonteStrikeOutColumn {
                get {
                    return this.columnbFonteStrikeOut;
                }
            }
            
            internal DataColumn bFonteSublinhadaColumn {
                get {
                    return this.columnbFonteSublinhada;
                }
            }
            
            internal DataColumn bVisivelImpressaoColumn {
                get {
                    return this.columnbVisivelImpressao;
                }
            }
            
            internal DataColumn nCorRGBColumn {
                get {
                    return this.columnnCorRGB;
                }
            }
            
            public tbRelatorioCamposBDRow this[int index] {
                get {
                    return ((tbRelatorioCamposBDRow)(this.Rows[index]));
                }
            }
            
            public event tbRelatorioCamposBDRowChangeEventHandler tbRelatorioCamposBDRowChanged;
            
            public event tbRelatorioCamposBDRowChangeEventHandler tbRelatorioCamposBDRowChanging;
            
            public event tbRelatorioCamposBDRowChangeEventHandler tbRelatorioCamposBDRowDeleted;
            
            public event tbRelatorioCamposBDRowChangeEventHandler tbRelatorioCamposBDRowDeleting;
            
            public void AddtbRelatorioCamposBDRow(tbRelatorioCamposBDRow row) {
                this.Rows.Add(row);
            }
            
            public tbRelatorioCamposBDRow AddtbRelatorioCamposBDRow(
                        int nIdExportador, 
                        int nIdRelatorio, 
                        int nIdCampoBD, 
                        int nIdTipo, 
                        int nZIndex, 
                        short nGrupo, 
                        int nX1, 
                        int nY1, 
                        int nX2, 
                        int nY2, 
                        short nCorR, 
                        short nCorG, 
                        short nCorB, 
                        string strFonteFamilia, 
                        int nFonteSize, 
                        bool bFonteNegrito, 
                        bool bFonteItalico, 
                        bool bFonteStrikeOut, 
                        bool bFonteSublinhada, 
                        bool bVisivelImpressao, 
                        int nCorRGB) {
                tbRelatorioCamposBDRow rowtbRelatorioCamposBDRow = ((tbRelatorioCamposBDRow)(this.NewRow()));
                rowtbRelatorioCamposBDRow.ItemArray = new object[] {
                        nIdExportador,
                        nIdRelatorio,
                        nIdCampoBD,
                        nIdTipo,
                        nZIndex,
                        nGrupo,
                        nX1,
                        nY1,
                        nX2,
                        nY2,
                        nCorR,
                        nCorG,
                        nCorB,
                        strFonteFamilia,
                        nFonteSize,
                        bFonteNegrito,
                        bFonteItalico,
                        bFonteStrikeOut,
                        bFonteSublinhada,
                        bVisivelImpressao,
                        nCorRGB};
                this.Rows.Add(rowtbRelatorioCamposBDRow);
                return rowtbRelatorioCamposBDRow;
            }
            
            public tbRelatorioCamposBDRow FindBynIdExportadornIdRelatorionIdCampoBDnIdTiponZIndexnGruponX1nY1nX2nY2(int nIdExportador, int nIdRelatorio, int nIdCampoBD, int nIdTipo, int nZIndex, short nGrupo, int nX1, int nY1, int nX2, int nY2) {
                return ((tbRelatorioCamposBDRow)(this.Rows.Find(new object[] {
                            nIdExportador,
                            nIdRelatorio,
                            nIdCampoBD,
                            nIdTipo,
                            nZIndex,
                            nGrupo,
                            nX1,
                            nY1,
                            nX2,
                            nY2})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tbRelatorioCamposBDDataTable cln = ((tbRelatorioCamposBDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tbRelatorioCamposBDDataTable();
            }
            
            internal void InitVars() {
                this.columnnIdExportador = this.Columns["nIdExportador"];
                this.columnnIdRelatorio = this.Columns["nIdRelatorio"];
                this.columnnIdCampoBD = this.Columns["nIdCampoBD"];
                this.columnnIdTipo = this.Columns["nIdTipo"];
                this.columnnZIndex = this.Columns["nZIndex"];
                this.columnnGrupo = this.Columns["nGrupo"];
                this.columnnX1 = this.Columns["nX1"];
                this.columnnY1 = this.Columns["nY1"];
                this.columnnX2 = this.Columns["nX2"];
                this.columnnY2 = this.Columns["nY2"];
                this.columnnCorR = this.Columns["nCorR"];
                this.columnnCorG = this.Columns["nCorG"];
                this.columnnCorB = this.Columns["nCorB"];
                this.columnstrFonteFamilia = this.Columns["strFonteFamilia"];
                this.columnnFonteSize = this.Columns["nFonteSize"];
                this.columnbFonteNegrito = this.Columns["bFonteNegrito"];
                this.columnbFonteItalico = this.Columns["bFonteItalico"];
                this.columnbFonteStrikeOut = this.Columns["bFonteStrikeOut"];
                this.columnbFonteSublinhada = this.Columns["bFonteSublinhada"];
                this.columnbVisivelImpressao = this.Columns["bVisivelImpressao"];
                this.columnnCorRGB = this.Columns["nCorRGB"];
            }
            
            private void InitClass() {
                this.columnnIdExportador = new DataColumn("nIdExportador", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdExportador);
                this.columnnIdRelatorio = new DataColumn("nIdRelatorio", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdRelatorio);
                this.columnnIdCampoBD = new DataColumn("nIdCampoBD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdCampoBD);
                this.columnnIdTipo = new DataColumn("nIdTipo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdTipo);
                this.columnnZIndex = new DataColumn("nZIndex", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnZIndex);
                this.columnnGrupo = new DataColumn("nGrupo", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnGrupo);
                this.columnnX1 = new DataColumn("nX1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnX1);
                this.columnnY1 = new DataColumn("nY1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnY1);
                this.columnnX2 = new DataColumn("nX2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnX2);
                this.columnnY2 = new DataColumn("nY2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnY2);
                this.columnnCorR = new DataColumn("nCorR", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorR);
                this.columnnCorG = new DataColumn("nCorG", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorG);
                this.columnnCorB = new DataColumn("nCorB", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorB);
                this.columnstrFonteFamilia = new DataColumn("strFonteFamilia", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnstrFonteFamilia);
                this.columnnFonteSize = new DataColumn("nFonteSize", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnFonteSize);
                this.columnbFonteNegrito = new DataColumn("bFonteNegrito", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbFonteNegrito);
                this.columnbFonteItalico = new DataColumn("bFonteItalico", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbFonteItalico);
                this.columnbFonteStrikeOut = new DataColumn("bFonteStrikeOut", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbFonteStrikeOut);
                this.columnbFonteSublinhada = new DataColumn("bFonteSublinhada", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbFonteSublinhada);
                this.columnbVisivelImpressao = new DataColumn("bVisivelImpressao", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbVisivelImpressao);
                this.columnnCorRGB = new DataColumn("nCorRGB", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorRGB);
                this.Constraints.Add(new UniqueConstraint("XsdTbRelatorioCamposBDKey1", new DataColumn[] {
                                this.columnnIdExportador,
                                this.columnnIdRelatorio,
                                this.columnnIdCampoBD,
                                this.columnnIdTipo,
                                this.columnnZIndex,
                                this.columnnGrupo,
                                this.columnnX1,
                                this.columnnY1,
                                this.columnnX2,
                                this.columnnY2}, true));
                this.columnnIdExportador.AllowDBNull = false;
                this.columnnIdRelatorio.AllowDBNull = false;
                this.columnnIdCampoBD.AllowDBNull = false;
                this.columnnIdTipo.AllowDBNull = false;
                this.columnnZIndex.AllowDBNull = false;
                this.columnnGrupo.AllowDBNull = false;
                this.columnnX1.AllowDBNull = false;
                this.columnnY1.AllowDBNull = false;
                this.columnnX2.AllowDBNull = false;
                this.columnnY2.AllowDBNull = false;
            }
            
            public tbRelatorioCamposBDRow NewtbRelatorioCamposBDRow() {
                return ((tbRelatorioCamposBDRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tbRelatorioCamposBDRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tbRelatorioCamposBDRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbRelatorioCamposBDRowChanged != null)) {
                    this.tbRelatorioCamposBDRowChanged(this, new tbRelatorioCamposBDRowChangeEvent(((tbRelatorioCamposBDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbRelatorioCamposBDRowChanging != null)) {
                    this.tbRelatorioCamposBDRowChanging(this, new tbRelatorioCamposBDRowChangeEvent(((tbRelatorioCamposBDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbRelatorioCamposBDRowDeleted != null)) {
                    this.tbRelatorioCamposBDRowDeleted(this, new tbRelatorioCamposBDRowChangeEvent(((tbRelatorioCamposBDRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbRelatorioCamposBDRowDeleting != null)) {
                    this.tbRelatorioCamposBDRowDeleting(this, new tbRelatorioCamposBDRowChangeEvent(((tbRelatorioCamposBDRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetbRelatorioCamposBDRow(tbRelatorioCamposBDRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioCamposBDRow : DataRow {
            
            private tbRelatorioCamposBDDataTable tabletbRelatorioCamposBD;
            
            internal tbRelatorioCamposBDRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbRelatorioCamposBD = ((tbRelatorioCamposBDDataTable)(this.Table));
            }
            
            public int nIdExportador {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nIdExportadorColumn]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nIdExportadorColumn] = value;
                }
            }
            
            public int nIdRelatorio {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nIdRelatorioColumn]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nIdRelatorioColumn] = value;
                }
            }
            
            public int nIdCampoBD {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nIdCampoBDColumn]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nIdCampoBDColumn] = value;
                }
            }
            
            public int nIdTipo {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nIdTipoColumn]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nIdTipoColumn] = value;
                }
            }
            
            public int nZIndex {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nZIndexColumn]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nZIndexColumn] = value;
                }
            }
            
            public short nGrupo {
                get {
                    return ((short)(this[this.tabletbRelatorioCamposBD.nGrupoColumn]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nGrupoColumn] = value;
                }
            }
            
            public int nX1 {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nX1Column]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nX1Column] = value;
                }
            }
            
            public int nY1 {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nY1Column]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nY1Column] = value;
                }
            }
            
            public int nX2 {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nX2Column]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nX2Column] = value;
                }
            }
            
            public int nY2 {
                get {
                    return ((int)(this[this.tabletbRelatorioCamposBD.nY2Column]));
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nY2Column] = value;
                }
            }
            
            public short nCorR {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioCamposBD.nCorRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nCorRColumn] = value;
                }
            }
            
            public short nCorG {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioCamposBD.nCorGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nCorGColumn] = value;
                }
            }
            
            public short nCorB {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioCamposBD.nCorBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nCorBColumn] = value;
                }
            }
            
            public string strFonteFamilia {
                get {
                    try {
                        return ((string)(this[this.tabletbRelatorioCamposBD.strFonteFamiliaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.strFonteFamiliaColumn] = value;
                }
            }
            
            public int nFonteSize {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioCamposBD.nFonteSizeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nFonteSizeColumn] = value;
                }
            }
            
            public bool bFonteNegrito {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatorioCamposBD.bFonteNegritoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.bFonteNegritoColumn] = value;
                }
            }
            
            public bool bFonteItalico {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatorioCamposBD.bFonteItalicoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.bFonteItalicoColumn] = value;
                }
            }
            
            public bool bFonteStrikeOut {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatorioCamposBD.bFonteStrikeOutColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.bFonteStrikeOutColumn] = value;
                }
            }
            
            public bool bFonteSublinhada {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatorioCamposBD.bFonteSublinhadaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.bFonteSublinhadaColumn] = value;
                }
            }
            
            public bool bVisivelImpressao {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatorioCamposBD.bVisivelImpressaoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.bVisivelImpressaoColumn] = value;
                }
            }
            
            public int nCorRGB {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioCamposBD.nCorRGBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioCamposBD.nCorRGBColumn] = value;
                }
            }
            
            public bool IsnCorRNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.nCorRColumn);
            }
            
            public void SetnCorRNull() {
                this[this.tabletbRelatorioCamposBD.nCorRColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorGNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.nCorGColumn);
            }
            
            public void SetnCorGNull() {
                this[this.tabletbRelatorioCamposBD.nCorGColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorBNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.nCorBColumn);
            }
            
            public void SetnCorBNull() {
                this[this.tabletbRelatorioCamposBD.nCorBColumn] = System.Convert.DBNull;
            }
            
            public bool IsstrFonteFamiliaNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.strFonteFamiliaColumn);
            }
            
            public void SetstrFonteFamiliaNull() {
                this[this.tabletbRelatorioCamposBD.strFonteFamiliaColumn] = System.Convert.DBNull;
            }
            
            public bool IsnFonteSizeNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.nFonteSizeColumn);
            }
            
            public void SetnFonteSizeNull() {
                this[this.tabletbRelatorioCamposBD.nFonteSizeColumn] = System.Convert.DBNull;
            }
            
            public bool IsbFonteNegritoNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.bFonteNegritoColumn);
            }
            
            public void SetbFonteNegritoNull() {
                this[this.tabletbRelatorioCamposBD.bFonteNegritoColumn] = System.Convert.DBNull;
            }
            
            public bool IsbFonteItalicoNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.bFonteItalicoColumn);
            }
            
            public void SetbFonteItalicoNull() {
                this[this.tabletbRelatorioCamposBD.bFonteItalicoColumn] = System.Convert.DBNull;
            }
            
            public bool IsbFonteStrikeOutNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.bFonteStrikeOutColumn);
            }
            
            public void SetbFonteStrikeOutNull() {
                this[this.tabletbRelatorioCamposBD.bFonteStrikeOutColumn] = System.Convert.DBNull;
            }
            
            public bool IsbFonteSublinhadaNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.bFonteSublinhadaColumn);
            }
            
            public void SetbFonteSublinhadaNull() {
                this[this.tabletbRelatorioCamposBD.bFonteSublinhadaColumn] = System.Convert.DBNull;
            }
            
            public bool IsbVisivelImpressaoNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.bVisivelImpressaoColumn);
            }
            
            public void SetbVisivelImpressaoNull() {
                this[this.tabletbRelatorioCamposBD.bVisivelImpressaoColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorRGBNull() {
                return this.IsNull(this.tabletbRelatorioCamposBD.nCorRGBColumn);
            }
            
            public void SetnCorRGBNull() {
                this[this.tabletbRelatorioCamposBD.nCorRGBColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioCamposBDRowChangeEvent : EventArgs {
            
            private tbRelatorioCamposBDRow eventRow;
            
            private DataRowAction eventAction;
            
            public tbRelatorioCamposBDRowChangeEvent(tbRelatorioCamposBDRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tbRelatorioCamposBDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
