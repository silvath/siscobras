//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.510
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mdlDataBaseData.Tabelas {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class XsdTbUnidadesMassaIdioma : DataSet {
        
        private tbUnidadesMassaIdiomaDataTable tabletbUnidadesMassaIdioma;
        
        public XsdTbUnidadesMassaIdioma() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected XsdTbUnidadesMassaIdioma(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbUnidadesMassaIdioma"] != null)) {
                    this.Tables.Add(new tbUnidadesMassaIdiomaDataTable(ds.Tables["tbUnidadesMassaIdioma"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbUnidadesMassaIdiomaDataTable tbUnidadesMassaIdioma {
            get {
                return this.tabletbUnidadesMassaIdioma;
            }
        }
        
        public override DataSet Clone() {
            XsdTbUnidadesMassaIdioma cln = ((XsdTbUnidadesMassaIdioma)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tbUnidadesMassaIdioma"] != null)) {
                this.Tables.Add(new tbUnidadesMassaIdiomaDataTable(ds.Tables["tbUnidadesMassaIdioma"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletbUnidadesMassaIdioma = ((tbUnidadesMassaIdiomaDataTable)(this.Tables["tbUnidadesMassaIdioma"]));
            if ((this.tabletbUnidadesMassaIdioma != null)) {
                this.tabletbUnidadesMassaIdioma.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "XsdTbUnidadesMassaIdioma";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XsdTbUnidadesMassaIdioma.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletbUnidadesMassaIdioma = new tbUnidadesMassaIdiomaDataTable();
            this.Tables.Add(this.tabletbUnidadesMassaIdioma);
        }
        
        private bool ShouldSerializetbUnidadesMassaIdioma() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tbUnidadesMassaIdiomaRowChangeEventHandler(object sender, tbUnidadesMassaIdiomaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbUnidadesMassaIdiomaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnnIdUnidadeMassa;
            
            private DataColumn columnnIdIdioma;
            
            private DataColumn columnstrNome;
            
            private DataColumn columnstrSigla;
            
            internal tbUnidadesMassaIdiomaDataTable() : 
                    base("tbUnidadesMassaIdioma") {
                this.InitClass();
            }
            
            internal tbUnidadesMassaIdiomaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn nIdUnidadeMassaColumn {
                get {
                    return this.columnnIdUnidadeMassa;
                }
            }
            
            internal DataColumn nIdIdiomaColumn {
                get {
                    return this.columnnIdIdioma;
                }
            }
            
            internal DataColumn strNomeColumn {
                get {
                    return this.columnstrNome;
                }
            }
            
            internal DataColumn strSiglaColumn {
                get {
                    return this.columnstrSigla;
                }
            }
            
            public tbUnidadesMassaIdiomaRow this[int index] {
                get {
                    return ((tbUnidadesMassaIdiomaRow)(this.Rows[index]));
                }
            }
            
            public event tbUnidadesMassaIdiomaRowChangeEventHandler tbUnidadesMassaIdiomaRowChanged;
            
            public event tbUnidadesMassaIdiomaRowChangeEventHandler tbUnidadesMassaIdiomaRowChanging;
            
            public event tbUnidadesMassaIdiomaRowChangeEventHandler tbUnidadesMassaIdiomaRowDeleted;
            
            public event tbUnidadesMassaIdiomaRowChangeEventHandler tbUnidadesMassaIdiomaRowDeleting;
            
            public void AddtbUnidadesMassaIdiomaRow(tbUnidadesMassaIdiomaRow row) {
                this.Rows.Add(row);
            }
            
            public tbUnidadesMassaIdiomaRow AddtbUnidadesMassaIdiomaRow(int nIdUnidadeMassa, int nIdIdioma, string strNome, string strSigla) {
                tbUnidadesMassaIdiomaRow rowtbUnidadesMassaIdiomaRow = ((tbUnidadesMassaIdiomaRow)(this.NewRow()));
                rowtbUnidadesMassaIdiomaRow.ItemArray = new object[] {
                        nIdUnidadeMassa,
                        nIdIdioma,
                        strNome,
                        strSigla};
                this.Rows.Add(rowtbUnidadesMassaIdiomaRow);
                return rowtbUnidadesMassaIdiomaRow;
            }
            
            public tbUnidadesMassaIdiomaRow FindBynIdUnidadeMassanIdIdioma(int nIdUnidadeMassa, int nIdIdioma) {
                return ((tbUnidadesMassaIdiomaRow)(this.Rows.Find(new object[] {
                            nIdUnidadeMassa,
                            nIdIdioma})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tbUnidadesMassaIdiomaDataTable cln = ((tbUnidadesMassaIdiomaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tbUnidadesMassaIdiomaDataTable();
            }
            
            internal void InitVars() {
                this.columnnIdUnidadeMassa = this.Columns["nIdUnidadeMassa"];
                this.columnnIdIdioma = this.Columns["nIdIdioma"];
                this.columnstrNome = this.Columns["strNome"];
                this.columnstrSigla = this.Columns["strSigla"];
            }
            
            private void InitClass() {
                this.columnnIdUnidadeMassa = new DataColumn("nIdUnidadeMassa", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdUnidadeMassa);
                this.columnnIdIdioma = new DataColumn("nIdIdioma", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdIdioma);
                this.columnstrNome = new DataColumn("strNome", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnstrNome);
                this.columnstrSigla = new DataColumn("strSigla", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnstrSigla);
                this.Constraints.Add(new UniqueConstraint("XsdTbUnidadesMassaIdiomaKey1", new DataColumn[] {
                                this.columnnIdUnidadeMassa,
                                this.columnnIdIdioma}, true));
                this.columnnIdUnidadeMassa.AllowDBNull = false;
                this.columnnIdIdioma.AllowDBNull = false;
            }
            
            public tbUnidadesMassaIdiomaRow NewtbUnidadesMassaIdiomaRow() {
                return ((tbUnidadesMassaIdiomaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tbUnidadesMassaIdiomaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tbUnidadesMassaIdiomaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbUnidadesMassaIdiomaRowChanged != null)) {
                    this.tbUnidadesMassaIdiomaRowChanged(this, new tbUnidadesMassaIdiomaRowChangeEvent(((tbUnidadesMassaIdiomaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbUnidadesMassaIdiomaRowChanging != null)) {
                    this.tbUnidadesMassaIdiomaRowChanging(this, new tbUnidadesMassaIdiomaRowChangeEvent(((tbUnidadesMassaIdiomaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbUnidadesMassaIdiomaRowDeleted != null)) {
                    this.tbUnidadesMassaIdiomaRowDeleted(this, new tbUnidadesMassaIdiomaRowChangeEvent(((tbUnidadesMassaIdiomaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbUnidadesMassaIdiomaRowDeleting != null)) {
                    this.tbUnidadesMassaIdiomaRowDeleting(this, new tbUnidadesMassaIdiomaRowChangeEvent(((tbUnidadesMassaIdiomaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetbUnidadesMassaIdiomaRow(tbUnidadesMassaIdiomaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbUnidadesMassaIdiomaRow : DataRow {
            
            private tbUnidadesMassaIdiomaDataTable tabletbUnidadesMassaIdioma;
            
            internal tbUnidadesMassaIdiomaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbUnidadesMassaIdioma = ((tbUnidadesMassaIdiomaDataTable)(this.Table));
            }
            
            public int nIdUnidadeMassa {
                get {
                    return ((int)(this[this.tabletbUnidadesMassaIdioma.nIdUnidadeMassaColumn]));
                }
                set {
                    this[this.tabletbUnidadesMassaIdioma.nIdUnidadeMassaColumn] = value;
                }
            }
            
            public int nIdIdioma {
                get {
                    return ((int)(this[this.tabletbUnidadesMassaIdioma.nIdIdiomaColumn]));
                }
                set {
                    this[this.tabletbUnidadesMassaIdioma.nIdIdiomaColumn] = value;
                }
            }
            
            public string strNome {
                get {
                    try {
                        return ((string)(this[this.tabletbUnidadesMassaIdioma.strNomeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbUnidadesMassaIdioma.strNomeColumn] = value;
                }
            }
            
            public string strSigla {
                get {
                    try {
                        return ((string)(this[this.tabletbUnidadesMassaIdioma.strSiglaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbUnidadesMassaIdioma.strSiglaColumn] = value;
                }
            }
            
            public bool IsstrNomeNull() {
                return this.IsNull(this.tabletbUnidadesMassaIdioma.strNomeColumn);
            }
            
            public void SetstrNomeNull() {
                this[this.tabletbUnidadesMassaIdioma.strNomeColumn] = System.Convert.DBNull;
            }
            
            public bool IsstrSiglaNull() {
                return this.IsNull(this.tabletbUnidadesMassaIdioma.strSiglaColumn);
            }
            
            public void SetstrSiglaNull() {
                this[this.tabletbUnidadesMassaIdioma.strSiglaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbUnidadesMassaIdiomaRowChangeEvent : EventArgs {
            
            private tbUnidadesMassaIdiomaRow eventRow;
            
            private DataRowAction eventAction;
            
            public tbUnidadesMassaIdiomaRowChangeEvent(tbUnidadesMassaIdiomaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tbUnidadesMassaIdiomaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
