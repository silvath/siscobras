//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.510
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mdlDataBaseData.Tabelas {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class XsdTbIdiomasTextos : DataSet {
        
        private tbIdiomasTextosDataTable tabletbIdiomasTextos;
        
        public XsdTbIdiomasTextos() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected XsdTbIdiomasTextos(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbIdiomasTextos"] != null)) {
                    this.Tables.Add(new tbIdiomasTextosDataTable(ds.Tables["tbIdiomasTextos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbIdiomasTextosDataTable tbIdiomasTextos {
            get {
                return this.tabletbIdiomasTextos;
            }
        }
        
        public override DataSet Clone() {
            XsdTbIdiomasTextos cln = ((XsdTbIdiomasTextos)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tbIdiomasTextos"] != null)) {
                this.Tables.Add(new tbIdiomasTextosDataTable(ds.Tables["tbIdiomasTextos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletbIdiomasTextos = ((tbIdiomasTextosDataTable)(this.Tables["tbIdiomasTextos"]));
            if ((this.tabletbIdiomasTextos != null)) {
                this.tabletbIdiomasTextos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "XsdTbIdiomasTextos";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XsdTbIdiomasTextos.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletbIdiomasTextos = new tbIdiomasTextosDataTable();
            this.Tables.Add(this.tabletbIdiomasTextos);
        }
        
        private bool ShouldSerializetbIdiomasTextos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tbIdiomasTextosRowChangeEventHandler(object sender, tbIdiomasTextosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbIdiomasTextosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnidTexto;
            
            private DataColumn columnidIdioma;
            
            private DataColumn columnmstrTexto;
            
            internal tbIdiomasTextosDataTable() : 
                    base("tbIdiomasTextos") {
                this.InitClass();
            }
            
            internal tbIdiomasTextosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idTextoColumn {
                get {
                    return this.columnidTexto;
                }
            }
            
            internal DataColumn idIdiomaColumn {
                get {
                    return this.columnidIdioma;
                }
            }
            
            internal DataColumn mstrTextoColumn {
                get {
                    return this.columnmstrTexto;
                }
            }
            
            public tbIdiomasTextosRow this[int index] {
                get {
                    return ((tbIdiomasTextosRow)(this.Rows[index]));
                }
            }
            
            public event tbIdiomasTextosRowChangeEventHandler tbIdiomasTextosRowChanged;
            
            public event tbIdiomasTextosRowChangeEventHandler tbIdiomasTextosRowChanging;
            
            public event tbIdiomasTextosRowChangeEventHandler tbIdiomasTextosRowDeleted;
            
            public event tbIdiomasTextosRowChangeEventHandler tbIdiomasTextosRowDeleting;
            
            public void AddtbIdiomasTextosRow(tbIdiomasTextosRow row) {
                this.Rows.Add(row);
            }
            
            public tbIdiomasTextosRow AddtbIdiomasTextosRow(int idTexto, int idIdioma, string mstrTexto) {
                tbIdiomasTextosRow rowtbIdiomasTextosRow = ((tbIdiomasTextosRow)(this.NewRow()));
                rowtbIdiomasTextosRow.ItemArray = new object[] {
                        idTexto,
                        idIdioma,
                        mstrTexto};
                this.Rows.Add(rowtbIdiomasTextosRow);
                return rowtbIdiomasTextosRow;
            }
            
            public tbIdiomasTextosRow FindByidTextoidIdioma(int idTexto, int idIdioma) {
                return ((tbIdiomasTextosRow)(this.Rows.Find(new object[] {
                            idTexto,
                            idIdioma})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tbIdiomasTextosDataTable cln = ((tbIdiomasTextosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tbIdiomasTextosDataTable();
            }
            
            internal void InitVars() {
                this.columnidTexto = this.Columns["idTexto"];
                this.columnidIdioma = this.Columns["idIdioma"];
                this.columnmstrTexto = this.Columns["mstrTexto"];
            }
            
            private void InitClass() {
                this.columnidTexto = new DataColumn("idTexto", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnidTexto);
                this.columnidIdioma = new DataColumn("idIdioma", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnidIdioma);
                this.columnmstrTexto = new DataColumn("mstrTexto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmstrTexto);
                this.Constraints.Add(new UniqueConstraint("XsdTbIdiomasTextosKey1", new DataColumn[] {
                                this.columnidTexto,
                                this.columnidIdioma}, true));
                this.columnidTexto.AllowDBNull = false;
                this.columnidIdioma.AllowDBNull = false;
            }
            
            public tbIdiomasTextosRow NewtbIdiomasTextosRow() {
                return ((tbIdiomasTextosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tbIdiomasTextosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tbIdiomasTextosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbIdiomasTextosRowChanged != null)) {
                    this.tbIdiomasTextosRowChanged(this, new tbIdiomasTextosRowChangeEvent(((tbIdiomasTextosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbIdiomasTextosRowChanging != null)) {
                    this.tbIdiomasTextosRowChanging(this, new tbIdiomasTextosRowChangeEvent(((tbIdiomasTextosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbIdiomasTextosRowDeleted != null)) {
                    this.tbIdiomasTextosRowDeleted(this, new tbIdiomasTextosRowChangeEvent(((tbIdiomasTextosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbIdiomasTextosRowDeleting != null)) {
                    this.tbIdiomasTextosRowDeleting(this, new tbIdiomasTextosRowChangeEvent(((tbIdiomasTextosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetbIdiomasTextosRow(tbIdiomasTextosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbIdiomasTextosRow : DataRow {
            
            private tbIdiomasTextosDataTable tabletbIdiomasTextos;
            
            internal tbIdiomasTextosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbIdiomasTextos = ((tbIdiomasTextosDataTable)(this.Table));
            }
            
            public int idTexto {
                get {
                    return ((int)(this[this.tabletbIdiomasTextos.idTextoColumn]));
                }
                set {
                    this[this.tabletbIdiomasTextos.idTextoColumn] = value;
                }
            }
            
            public int idIdioma {
                get {
                    return ((int)(this[this.tabletbIdiomasTextos.idIdiomaColumn]));
                }
                set {
                    this[this.tabletbIdiomasTextos.idIdiomaColumn] = value;
                }
            }
            
            public string mstrTexto {
                get {
                    try {
                        return ((string)(this[this.tabletbIdiomasTextos.mstrTextoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbIdiomasTextos.mstrTextoColumn] = value;
                }
            }
            
            public bool IsmstrTextoNull() {
                return this.IsNull(this.tabletbIdiomasTextos.mstrTextoColumn);
            }
            
            public void SetmstrTextoNull() {
                this[this.tabletbIdiomasTextos.mstrTextoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbIdiomasTextosRowChangeEvent : EventArgs {
            
            private tbIdiomasTextosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tbIdiomasTextosRowChangeEvent(tbIdiomasTextosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tbIdiomasTextosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
