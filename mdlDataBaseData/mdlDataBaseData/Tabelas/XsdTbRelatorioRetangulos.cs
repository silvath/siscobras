//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.510
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mdlDataBaseData.Tabelas {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class XsdTbRelatorioRetangulos : DataSet {
        
        private tbRelatorioRetangulosDataTable tabletbRelatorioRetangulos;
        
        public XsdTbRelatorioRetangulos() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected XsdTbRelatorioRetangulos(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbRelatorioRetangulos"] != null)) {
                    this.Tables.Add(new tbRelatorioRetangulosDataTable(ds.Tables["tbRelatorioRetangulos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbRelatorioRetangulosDataTable tbRelatorioRetangulos {
            get {
                return this.tabletbRelatorioRetangulos;
            }
        }
        
        public override DataSet Clone() {
            XsdTbRelatorioRetangulos cln = ((XsdTbRelatorioRetangulos)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tbRelatorioRetangulos"] != null)) {
                this.Tables.Add(new tbRelatorioRetangulosDataTable(ds.Tables["tbRelatorioRetangulos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletbRelatorioRetangulos = ((tbRelatorioRetangulosDataTable)(this.Tables["tbRelatorioRetangulos"]));
            if ((this.tabletbRelatorioRetangulos != null)) {
                this.tabletbRelatorioRetangulos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "XsdTbRelatorioRetangulos";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XsdTbRelatorioRetangulos.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletbRelatorioRetangulos = new tbRelatorioRetangulosDataTable();
            this.Tables.Add(this.tabletbRelatorioRetangulos);
        }
        
        private bool ShouldSerializetbRelatorioRetangulos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tbRelatorioRetangulosRowChangeEventHandler(object sender, tbRelatorioRetangulosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioRetangulosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnnIdExportador;
            
            private DataColumn columnnIdTipo;
            
            private DataColumn columnnIdRelatorio;
            
            private DataColumn columnnIdRetangulo;
            
            private DataColumn columnnX1;
            
            private DataColumn columnnY1;
            
            private DataColumn columnnX2;
            
            private DataColumn columnnY2;
            
            private DataColumn columnnEspessura;
            
            private DataColumn columnnCorR;
            
            private DataColumn columnnCorG;
            
            private DataColumn columnnCorB;
            
            private DataColumn columnbVisivelImpressao;
            
            private DataColumn columnnGrupo;
            
            private DataColumn columnnEstilo_caneta;
            
            private DataColumn columnnCorRGB_fundo;
            
            private DataColumn columnbOpaco;
            
            private DataColumn columnnCorRGB_linha;
            
            internal tbRelatorioRetangulosDataTable() : 
                    base("tbRelatorioRetangulos") {
                this.InitClass();
            }
            
            internal tbRelatorioRetangulosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn nIdExportadorColumn {
                get {
                    return this.columnnIdExportador;
                }
            }
            
            internal DataColumn nIdTipoColumn {
                get {
                    return this.columnnIdTipo;
                }
            }
            
            internal DataColumn nIdRelatorioColumn {
                get {
                    return this.columnnIdRelatorio;
                }
            }
            
            internal DataColumn nIdRetanguloColumn {
                get {
                    return this.columnnIdRetangulo;
                }
            }
            
            internal DataColumn nX1Column {
                get {
                    return this.columnnX1;
                }
            }
            
            internal DataColumn nY1Column {
                get {
                    return this.columnnY1;
                }
            }
            
            internal DataColumn nX2Column {
                get {
                    return this.columnnX2;
                }
            }
            
            internal DataColumn nY2Column {
                get {
                    return this.columnnY2;
                }
            }
            
            internal DataColumn nEspessuraColumn {
                get {
                    return this.columnnEspessura;
                }
            }
            
            internal DataColumn nCorRColumn {
                get {
                    return this.columnnCorR;
                }
            }
            
            internal DataColumn nCorGColumn {
                get {
                    return this.columnnCorG;
                }
            }
            
            internal DataColumn nCorBColumn {
                get {
                    return this.columnnCorB;
                }
            }
            
            internal DataColumn bVisivelImpressaoColumn {
                get {
                    return this.columnbVisivelImpressao;
                }
            }
            
            internal DataColumn nGrupoColumn {
                get {
                    return this.columnnGrupo;
                }
            }
            
            internal DataColumn nEstilo_canetaColumn {
                get {
                    return this.columnnEstilo_caneta;
                }
            }
            
            internal DataColumn nCorRGB_fundoColumn {
                get {
                    return this.columnnCorRGB_fundo;
                }
            }
            
            internal DataColumn bOpacoColumn {
                get {
                    return this.columnbOpaco;
                }
            }
            
            internal DataColumn nCorRGB_linhaColumn {
                get {
                    return this.columnnCorRGB_linha;
                }
            }
            
            public tbRelatorioRetangulosRow this[int index] {
                get {
                    return ((tbRelatorioRetangulosRow)(this.Rows[index]));
                }
            }
            
            public event tbRelatorioRetangulosRowChangeEventHandler tbRelatorioRetangulosRowChanged;
            
            public event tbRelatorioRetangulosRowChangeEventHandler tbRelatorioRetangulosRowChanging;
            
            public event tbRelatorioRetangulosRowChangeEventHandler tbRelatorioRetangulosRowDeleted;
            
            public event tbRelatorioRetangulosRowChangeEventHandler tbRelatorioRetangulosRowDeleting;
            
            public void AddtbRelatorioRetangulosRow(tbRelatorioRetangulosRow row) {
                this.Rows.Add(row);
            }
            
            public tbRelatorioRetangulosRow AddtbRelatorioRetangulosRow(
                        int nIdExportador, 
                        int nIdTipo, 
                        int nIdRelatorio, 
                        int nIdRetangulo, 
                        int nX1, 
                        int nY1, 
                        int nX2, 
                        int nY2, 
                        System.Double nEspessura, 
                        short nCorR, 
                        short nCorG, 
                        short nCorB, 
                        bool bVisivelImpressao, 
                        short nGrupo, 
                        short nEstilo_caneta, 
                        int nCorRGB_fundo, 
                        bool bOpaco, 
                        int nCorRGB_linha) {
                tbRelatorioRetangulosRow rowtbRelatorioRetangulosRow = ((tbRelatorioRetangulosRow)(this.NewRow()));
                rowtbRelatorioRetangulosRow.ItemArray = new object[] {
                        nIdExportador,
                        nIdTipo,
                        nIdRelatorio,
                        nIdRetangulo,
                        nX1,
                        nY1,
                        nX2,
                        nY2,
                        nEspessura,
                        nCorR,
                        nCorG,
                        nCorB,
                        bVisivelImpressao,
                        nGrupo,
                        nEstilo_caneta,
                        nCorRGB_fundo,
                        bOpaco,
                        nCorRGB_linha};
                this.Rows.Add(rowtbRelatorioRetangulosRow);
                return rowtbRelatorioRetangulosRow;
            }
            
            public tbRelatorioRetangulosRow FindBynIdExportadornIdTiponIdRelatorionIdRetangulo(int nIdExportador, int nIdTipo, int nIdRelatorio, int nIdRetangulo) {
                return ((tbRelatorioRetangulosRow)(this.Rows.Find(new object[] {
                            nIdExportador,
                            nIdTipo,
                            nIdRelatorio,
                            nIdRetangulo})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tbRelatorioRetangulosDataTable cln = ((tbRelatorioRetangulosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tbRelatorioRetangulosDataTable();
            }
            
            internal void InitVars() {
                this.columnnIdExportador = this.Columns["nIdExportador"];
                this.columnnIdTipo = this.Columns["nIdTipo"];
                this.columnnIdRelatorio = this.Columns["nIdRelatorio"];
                this.columnnIdRetangulo = this.Columns["nIdRetangulo"];
                this.columnnX1 = this.Columns["nX1"];
                this.columnnY1 = this.Columns["nY1"];
                this.columnnX2 = this.Columns["nX2"];
                this.columnnY2 = this.Columns["nY2"];
                this.columnnEspessura = this.Columns["nEspessura"];
                this.columnnCorR = this.Columns["nCorR"];
                this.columnnCorG = this.Columns["nCorG"];
                this.columnnCorB = this.Columns["nCorB"];
                this.columnbVisivelImpressao = this.Columns["bVisivelImpressao"];
                this.columnnGrupo = this.Columns["nGrupo"];
                this.columnnEstilo_caneta = this.Columns["nEstilo_caneta"];
                this.columnnCorRGB_fundo = this.Columns["nCorRGB_fundo"];
                this.columnbOpaco = this.Columns["bOpaco"];
                this.columnnCorRGB_linha = this.Columns["nCorRGB_linha"];
            }
            
            private void InitClass() {
                this.columnnIdExportador = new DataColumn("nIdExportador", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdExportador);
                this.columnnIdTipo = new DataColumn("nIdTipo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdTipo);
                this.columnnIdRelatorio = new DataColumn("nIdRelatorio", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdRelatorio);
                this.columnnIdRetangulo = new DataColumn("nIdRetangulo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdRetangulo);
                this.columnnX1 = new DataColumn("nX1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnX1);
                this.columnnY1 = new DataColumn("nY1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnY1);
                this.columnnX2 = new DataColumn("nX2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnX2);
                this.columnnY2 = new DataColumn("nY2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnY2);
                this.columnnEspessura = new DataColumn("nEspessura", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnEspessura);
                this.columnnCorR = new DataColumn("nCorR", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorR);
                this.columnnCorG = new DataColumn("nCorG", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorG);
                this.columnnCorB = new DataColumn("nCorB", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorB);
                this.columnbVisivelImpressao = new DataColumn("bVisivelImpressao", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbVisivelImpressao);
                this.columnnGrupo = new DataColumn("nGrupo", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnGrupo);
                this.columnnEstilo_caneta = new DataColumn("nEstilo_caneta", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnEstilo_caneta);
                this.columnnCorRGB_fundo = new DataColumn("nCorRGB_fundo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorRGB_fundo);
                this.columnbOpaco = new DataColumn("bOpaco", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbOpaco);
                this.columnnCorRGB_linha = new DataColumn("nCorRGB_linha", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorRGB_linha);
                this.Constraints.Add(new UniqueConstraint("XsdTbRelatorioRetangulosKey1", new DataColumn[] {
                                this.columnnIdExportador,
                                this.columnnIdTipo,
                                this.columnnIdRelatorio,
                                this.columnnIdRetangulo}, true));
                this.columnnIdExportador.AllowDBNull = false;
                this.columnnIdTipo.AllowDBNull = false;
                this.columnnIdRelatorio.AllowDBNull = false;
                this.columnnIdRetangulo.AllowDBNull = false;
            }
            
            public tbRelatorioRetangulosRow NewtbRelatorioRetangulosRow() {
                return ((tbRelatorioRetangulosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tbRelatorioRetangulosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tbRelatorioRetangulosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbRelatorioRetangulosRowChanged != null)) {
                    this.tbRelatorioRetangulosRowChanged(this, new tbRelatorioRetangulosRowChangeEvent(((tbRelatorioRetangulosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbRelatorioRetangulosRowChanging != null)) {
                    this.tbRelatorioRetangulosRowChanging(this, new tbRelatorioRetangulosRowChangeEvent(((tbRelatorioRetangulosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbRelatorioRetangulosRowDeleted != null)) {
                    this.tbRelatorioRetangulosRowDeleted(this, new tbRelatorioRetangulosRowChangeEvent(((tbRelatorioRetangulosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbRelatorioRetangulosRowDeleting != null)) {
                    this.tbRelatorioRetangulosRowDeleting(this, new tbRelatorioRetangulosRowChangeEvent(((tbRelatorioRetangulosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetbRelatorioRetangulosRow(tbRelatorioRetangulosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioRetangulosRow : DataRow {
            
            private tbRelatorioRetangulosDataTable tabletbRelatorioRetangulos;
            
            internal tbRelatorioRetangulosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbRelatorioRetangulos = ((tbRelatorioRetangulosDataTable)(this.Table));
            }
            
            public int nIdExportador {
                get {
                    return ((int)(this[this.tabletbRelatorioRetangulos.nIdExportadorColumn]));
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nIdExportadorColumn] = value;
                }
            }
            
            public int nIdTipo {
                get {
                    return ((int)(this[this.tabletbRelatorioRetangulos.nIdTipoColumn]));
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nIdTipoColumn] = value;
                }
            }
            
            public int nIdRelatorio {
                get {
                    return ((int)(this[this.tabletbRelatorioRetangulos.nIdRelatorioColumn]));
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nIdRelatorioColumn] = value;
                }
            }
            
            public int nIdRetangulo {
                get {
                    return ((int)(this[this.tabletbRelatorioRetangulos.nIdRetanguloColumn]));
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nIdRetanguloColumn] = value;
                }
            }
            
            public int nX1 {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioRetangulos.nX1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nX1Column] = value;
                }
            }
            
            public int nY1 {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioRetangulos.nY1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nY1Column] = value;
                }
            }
            
            public int nX2 {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioRetangulos.nX2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nX2Column] = value;
                }
            }
            
            public int nY2 {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioRetangulos.nY2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nY2Column] = value;
                }
            }
            
            public System.Double nEspessura {
                get {
                    try {
                        return ((System.Double)(this[this.tabletbRelatorioRetangulos.nEspessuraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nEspessuraColumn] = value;
                }
            }
            
            public short nCorR {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioRetangulos.nCorRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nCorRColumn] = value;
                }
            }
            
            public short nCorG {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioRetangulos.nCorGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nCorGColumn] = value;
                }
            }
            
            public short nCorB {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioRetangulos.nCorBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nCorBColumn] = value;
                }
            }
            
            public bool bVisivelImpressao {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatorioRetangulos.bVisivelImpressaoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.bVisivelImpressaoColumn] = value;
                }
            }
            
            public short nGrupo {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioRetangulos.nGrupoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nGrupoColumn] = value;
                }
            }
            
            public short nEstilo_caneta {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioRetangulos.nEstilo_canetaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nEstilo_canetaColumn] = value;
                }
            }
            
            public int nCorRGB_fundo {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioRetangulos.nCorRGB_fundoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nCorRGB_fundoColumn] = value;
                }
            }
            
            public bool bOpaco {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatorioRetangulos.bOpacoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.bOpacoColumn] = value;
                }
            }
            
            public int nCorRGB_linha {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioRetangulos.nCorRGB_linhaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioRetangulos.nCorRGB_linhaColumn] = value;
                }
            }
            
            public bool IsnX1Null() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nX1Column);
            }
            
            public void SetnX1Null() {
                this[this.tabletbRelatorioRetangulos.nX1Column] = System.Convert.DBNull;
            }
            
            public bool IsnY1Null() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nY1Column);
            }
            
            public void SetnY1Null() {
                this[this.tabletbRelatorioRetangulos.nY1Column] = System.Convert.DBNull;
            }
            
            public bool IsnX2Null() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nX2Column);
            }
            
            public void SetnX2Null() {
                this[this.tabletbRelatorioRetangulos.nX2Column] = System.Convert.DBNull;
            }
            
            public bool IsnY2Null() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nY2Column);
            }
            
            public void SetnY2Null() {
                this[this.tabletbRelatorioRetangulos.nY2Column] = System.Convert.DBNull;
            }
            
            public bool IsnEspessuraNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nEspessuraColumn);
            }
            
            public void SetnEspessuraNull() {
                this[this.tabletbRelatorioRetangulos.nEspessuraColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorRNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nCorRColumn);
            }
            
            public void SetnCorRNull() {
                this[this.tabletbRelatorioRetangulos.nCorRColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorGNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nCorGColumn);
            }
            
            public void SetnCorGNull() {
                this[this.tabletbRelatorioRetangulos.nCorGColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorBNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nCorBColumn);
            }
            
            public void SetnCorBNull() {
                this[this.tabletbRelatorioRetangulos.nCorBColumn] = System.Convert.DBNull;
            }
            
            public bool IsbVisivelImpressaoNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.bVisivelImpressaoColumn);
            }
            
            public void SetbVisivelImpressaoNull() {
                this[this.tabletbRelatorioRetangulos.bVisivelImpressaoColumn] = System.Convert.DBNull;
            }
            
            public bool IsnGrupoNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nGrupoColumn);
            }
            
            public void SetnGrupoNull() {
                this[this.tabletbRelatorioRetangulos.nGrupoColumn] = System.Convert.DBNull;
            }
            
            public bool IsnEstilo_canetaNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nEstilo_canetaColumn);
            }
            
            public void SetnEstilo_canetaNull() {
                this[this.tabletbRelatorioRetangulos.nEstilo_canetaColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorRGB_fundoNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nCorRGB_fundoColumn);
            }
            
            public void SetnCorRGB_fundoNull() {
                this[this.tabletbRelatorioRetangulos.nCorRGB_fundoColumn] = System.Convert.DBNull;
            }
            
            public bool IsbOpacoNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.bOpacoColumn);
            }
            
            public void SetbOpacoNull() {
                this[this.tabletbRelatorioRetangulos.bOpacoColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorRGB_linhaNull() {
                return this.IsNull(this.tabletbRelatorioRetangulos.nCorRGB_linhaColumn);
            }
            
            public void SetnCorRGB_linhaNull() {
                this[this.tabletbRelatorioRetangulos.nCorRGB_linhaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioRetangulosRowChangeEvent : EventArgs {
            
            private tbRelatorioRetangulosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tbRelatorioRetangulosRowChangeEvent(tbRelatorioRetangulosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tbRelatorioRetangulosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
