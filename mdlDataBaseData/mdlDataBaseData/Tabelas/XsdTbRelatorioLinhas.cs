//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.510
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mdlDataBaseData.Tabelas {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class XsdTbRelatorioLinhas : DataSet {
        
        private tbRelatorioLinhasDataTable tabletbRelatorioLinhas;
        
        public XsdTbRelatorioLinhas() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected XsdTbRelatorioLinhas(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tbRelatorioLinhas"] != null)) {
                    this.Tables.Add(new tbRelatorioLinhasDataTable(ds.Tables["tbRelatorioLinhas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tbRelatorioLinhasDataTable tbRelatorioLinhas {
            get {
                return this.tabletbRelatorioLinhas;
            }
        }
        
        public override DataSet Clone() {
            XsdTbRelatorioLinhas cln = ((XsdTbRelatorioLinhas)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tbRelatorioLinhas"] != null)) {
                this.Tables.Add(new tbRelatorioLinhasDataTable(ds.Tables["tbRelatorioLinhas"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletbRelatorioLinhas = ((tbRelatorioLinhasDataTable)(this.Tables["tbRelatorioLinhas"]));
            if ((this.tabletbRelatorioLinhas != null)) {
                this.tabletbRelatorioLinhas.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "XsdTbRelatorioLinhas";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/XsdTbRelatorioLinhas.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletbRelatorioLinhas = new tbRelatorioLinhasDataTable();
            this.Tables.Add(this.tabletbRelatorioLinhas);
        }
        
        private bool ShouldSerializetbRelatorioLinhas() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tbRelatorioLinhasRowChangeEventHandler(object sender, tbRelatorioLinhasRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioLinhasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnnIdExportador;
            
            private DataColumn columnnIdTipo;
            
            private DataColumn columnnIdRelatorio;
            
            private DataColumn columnnIdLinha;
            
            private DataColumn columnnX1;
            
            private DataColumn columnnY1;
            
            private DataColumn columnnX2;
            
            private DataColumn columnnY2;
            
            private DataColumn columnnEspessura;
            
            private DataColumn columnnCorR;
            
            private DataColumn columnnCorG;
            
            private DataColumn columnnCorB;
            
            private DataColumn columnbVisivelImpressao;
            
            private DataColumn columnnGrupo;
            
            private DataColumn columnnEstilo_caneta;
            
            private DataColumn columnnEstilo_linha;
            
            private DataColumn columnnCorRGB;
            
            internal tbRelatorioLinhasDataTable() : 
                    base("tbRelatorioLinhas") {
                this.InitClass();
            }
            
            internal tbRelatorioLinhasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn nIdExportadorColumn {
                get {
                    return this.columnnIdExportador;
                }
            }
            
            internal DataColumn nIdTipoColumn {
                get {
                    return this.columnnIdTipo;
                }
            }
            
            internal DataColumn nIdRelatorioColumn {
                get {
                    return this.columnnIdRelatorio;
                }
            }
            
            internal DataColumn nIdLinhaColumn {
                get {
                    return this.columnnIdLinha;
                }
            }
            
            internal DataColumn nX1Column {
                get {
                    return this.columnnX1;
                }
            }
            
            internal DataColumn nY1Column {
                get {
                    return this.columnnY1;
                }
            }
            
            internal DataColumn nX2Column {
                get {
                    return this.columnnX2;
                }
            }
            
            internal DataColumn nY2Column {
                get {
                    return this.columnnY2;
                }
            }
            
            internal DataColumn nEspessuraColumn {
                get {
                    return this.columnnEspessura;
                }
            }
            
            internal DataColumn nCorRColumn {
                get {
                    return this.columnnCorR;
                }
            }
            
            internal DataColumn nCorGColumn {
                get {
                    return this.columnnCorG;
                }
            }
            
            internal DataColumn nCorBColumn {
                get {
                    return this.columnnCorB;
                }
            }
            
            internal DataColumn bVisivelImpressaoColumn {
                get {
                    return this.columnbVisivelImpressao;
                }
            }
            
            internal DataColumn nGrupoColumn {
                get {
                    return this.columnnGrupo;
                }
            }
            
            internal DataColumn nEstilo_canetaColumn {
                get {
                    return this.columnnEstilo_caneta;
                }
            }
            
            internal DataColumn nEstilo_linhaColumn {
                get {
                    return this.columnnEstilo_linha;
                }
            }
            
            internal DataColumn nCorRGBColumn {
                get {
                    return this.columnnCorRGB;
                }
            }
            
            public tbRelatorioLinhasRow this[int index] {
                get {
                    return ((tbRelatorioLinhasRow)(this.Rows[index]));
                }
            }
            
            public event tbRelatorioLinhasRowChangeEventHandler tbRelatorioLinhasRowChanged;
            
            public event tbRelatorioLinhasRowChangeEventHandler tbRelatorioLinhasRowChanging;
            
            public event tbRelatorioLinhasRowChangeEventHandler tbRelatorioLinhasRowDeleted;
            
            public event tbRelatorioLinhasRowChangeEventHandler tbRelatorioLinhasRowDeleting;
            
            public void AddtbRelatorioLinhasRow(tbRelatorioLinhasRow row) {
                this.Rows.Add(row);
            }
            
            public tbRelatorioLinhasRow AddtbRelatorioLinhasRow(
                        int nIdExportador, 
                        int nIdTipo, 
                        int nIdRelatorio, 
                        int nIdLinha, 
                        int nX1, 
                        int nY1, 
                        int nX2, 
                        int nY2, 
                        System.Double nEspessura, 
                        short nCorR, 
                        short nCorG, 
                        short nCorB, 
                        bool bVisivelImpressao, 
                        short nGrupo, 
                        short nEstilo_caneta, 
                        short nEstilo_linha, 
                        int nCorRGB) {
                tbRelatorioLinhasRow rowtbRelatorioLinhasRow = ((tbRelatorioLinhasRow)(this.NewRow()));
                rowtbRelatorioLinhasRow.ItemArray = new object[] {
                        nIdExportador,
                        nIdTipo,
                        nIdRelatorio,
                        nIdLinha,
                        nX1,
                        nY1,
                        nX2,
                        nY2,
                        nEspessura,
                        nCorR,
                        nCorG,
                        nCorB,
                        bVisivelImpressao,
                        nGrupo,
                        nEstilo_caneta,
                        nEstilo_linha,
                        nCorRGB};
                this.Rows.Add(rowtbRelatorioLinhasRow);
                return rowtbRelatorioLinhasRow;
            }
            
            public tbRelatorioLinhasRow FindBynIdExportadornIdTiponIdRelatorionIdLinha(int nIdExportador, int nIdTipo, int nIdRelatorio, int nIdLinha) {
                return ((tbRelatorioLinhasRow)(this.Rows.Find(new object[] {
                            nIdExportador,
                            nIdTipo,
                            nIdRelatorio,
                            nIdLinha})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tbRelatorioLinhasDataTable cln = ((tbRelatorioLinhasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tbRelatorioLinhasDataTable();
            }
            
            internal void InitVars() {
                this.columnnIdExportador = this.Columns["nIdExportador"];
                this.columnnIdTipo = this.Columns["nIdTipo"];
                this.columnnIdRelatorio = this.Columns["nIdRelatorio"];
                this.columnnIdLinha = this.Columns["nIdLinha"];
                this.columnnX1 = this.Columns["nX1"];
                this.columnnY1 = this.Columns["nY1"];
                this.columnnX2 = this.Columns["nX2"];
                this.columnnY2 = this.Columns["nY2"];
                this.columnnEspessura = this.Columns["nEspessura"];
                this.columnnCorR = this.Columns["nCorR"];
                this.columnnCorG = this.Columns["nCorG"];
                this.columnnCorB = this.Columns["nCorB"];
                this.columnbVisivelImpressao = this.Columns["bVisivelImpressao"];
                this.columnnGrupo = this.Columns["nGrupo"];
                this.columnnEstilo_caneta = this.Columns["nEstilo_caneta"];
                this.columnnEstilo_linha = this.Columns["nEstilo_linha"];
                this.columnnCorRGB = this.Columns["nCorRGB"];
            }
            
            private void InitClass() {
                this.columnnIdExportador = new DataColumn("nIdExportador", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdExportador);
                this.columnnIdTipo = new DataColumn("nIdTipo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdTipo);
                this.columnnIdRelatorio = new DataColumn("nIdRelatorio", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdRelatorio);
                this.columnnIdLinha = new DataColumn("nIdLinha", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnIdLinha);
                this.columnnX1 = new DataColumn("nX1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnX1);
                this.columnnY1 = new DataColumn("nY1", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnY1);
                this.columnnX2 = new DataColumn("nX2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnX2);
                this.columnnY2 = new DataColumn("nY2", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnY2);
                this.columnnEspessura = new DataColumn("nEspessura", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnEspessura);
                this.columnnCorR = new DataColumn("nCorR", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorR);
                this.columnnCorG = new DataColumn("nCorG", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorG);
                this.columnnCorB = new DataColumn("nCorB", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorB);
                this.columnbVisivelImpressao = new DataColumn("bVisivelImpressao", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbVisivelImpressao);
                this.columnnGrupo = new DataColumn("nGrupo", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnGrupo);
                this.columnnEstilo_caneta = new DataColumn("nEstilo_caneta", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnEstilo_caneta);
                this.columnnEstilo_linha = new DataColumn("nEstilo_linha", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnEstilo_linha);
                this.columnnCorRGB = new DataColumn("nCorRGB", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnCorRGB);
                this.Constraints.Add(new UniqueConstraint("XsdTbRelatorioLinhasKey1", new DataColumn[] {
                                this.columnnIdExportador,
                                this.columnnIdTipo,
                                this.columnnIdRelatorio,
                                this.columnnIdLinha}, true));
                this.columnnIdExportador.AllowDBNull = false;
                this.columnnIdTipo.AllowDBNull = false;
                this.columnnIdRelatorio.AllowDBNull = false;
                this.columnnIdLinha.AllowDBNull = false;
            }
            
            public tbRelatorioLinhasRow NewtbRelatorioLinhasRow() {
                return ((tbRelatorioLinhasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tbRelatorioLinhasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tbRelatorioLinhasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tbRelatorioLinhasRowChanged != null)) {
                    this.tbRelatorioLinhasRowChanged(this, new tbRelatorioLinhasRowChangeEvent(((tbRelatorioLinhasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tbRelatorioLinhasRowChanging != null)) {
                    this.tbRelatorioLinhasRowChanging(this, new tbRelatorioLinhasRowChangeEvent(((tbRelatorioLinhasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tbRelatorioLinhasRowDeleted != null)) {
                    this.tbRelatorioLinhasRowDeleted(this, new tbRelatorioLinhasRowChangeEvent(((tbRelatorioLinhasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tbRelatorioLinhasRowDeleting != null)) {
                    this.tbRelatorioLinhasRowDeleting(this, new tbRelatorioLinhasRowChangeEvent(((tbRelatorioLinhasRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetbRelatorioLinhasRow(tbRelatorioLinhasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioLinhasRow : DataRow {
            
            private tbRelatorioLinhasDataTable tabletbRelatorioLinhas;
            
            internal tbRelatorioLinhasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletbRelatorioLinhas = ((tbRelatorioLinhasDataTable)(this.Table));
            }
            
            public int nIdExportador {
                get {
                    return ((int)(this[this.tabletbRelatorioLinhas.nIdExportadorColumn]));
                }
                set {
                    this[this.tabletbRelatorioLinhas.nIdExportadorColumn] = value;
                }
            }
            
            public int nIdTipo {
                get {
                    return ((int)(this[this.tabletbRelatorioLinhas.nIdTipoColumn]));
                }
                set {
                    this[this.tabletbRelatorioLinhas.nIdTipoColumn] = value;
                }
            }
            
            public int nIdRelatorio {
                get {
                    return ((int)(this[this.tabletbRelatorioLinhas.nIdRelatorioColumn]));
                }
                set {
                    this[this.tabletbRelatorioLinhas.nIdRelatorioColumn] = value;
                }
            }
            
            public int nIdLinha {
                get {
                    return ((int)(this[this.tabletbRelatorioLinhas.nIdLinhaColumn]));
                }
                set {
                    this[this.tabletbRelatorioLinhas.nIdLinhaColumn] = value;
                }
            }
            
            public int nX1 {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioLinhas.nX1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nX1Column] = value;
                }
            }
            
            public int nY1 {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioLinhas.nY1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nY1Column] = value;
                }
            }
            
            public int nX2 {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioLinhas.nX2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nX2Column] = value;
                }
            }
            
            public int nY2 {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioLinhas.nY2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nY2Column] = value;
                }
            }
            
            public System.Double nEspessura {
                get {
                    try {
                        return ((System.Double)(this[this.tabletbRelatorioLinhas.nEspessuraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nEspessuraColumn] = value;
                }
            }
            
            public short nCorR {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioLinhas.nCorRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nCorRColumn] = value;
                }
            }
            
            public short nCorG {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioLinhas.nCorGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nCorGColumn] = value;
                }
            }
            
            public short nCorB {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioLinhas.nCorBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nCorBColumn] = value;
                }
            }
            
            public bool bVisivelImpressao {
                get {
                    try {
                        return ((bool)(this[this.tabletbRelatorioLinhas.bVisivelImpressaoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.bVisivelImpressaoColumn] = value;
                }
            }
            
            public short nGrupo {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioLinhas.nGrupoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nGrupoColumn] = value;
                }
            }
            
            public short nEstilo_caneta {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioLinhas.nEstilo_canetaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nEstilo_canetaColumn] = value;
                }
            }
            
            public short nEstilo_linha {
                get {
                    try {
                        return ((short)(this[this.tabletbRelatorioLinhas.nEstilo_linhaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nEstilo_linhaColumn] = value;
                }
            }
            
            public int nCorRGB {
                get {
                    try {
                        return ((int)(this[this.tabletbRelatorioLinhas.nCorRGBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletbRelatorioLinhas.nCorRGBColumn] = value;
                }
            }
            
            public bool IsnX1Null() {
                return this.IsNull(this.tabletbRelatorioLinhas.nX1Column);
            }
            
            public void SetnX1Null() {
                this[this.tabletbRelatorioLinhas.nX1Column] = System.Convert.DBNull;
            }
            
            public bool IsnY1Null() {
                return this.IsNull(this.tabletbRelatorioLinhas.nY1Column);
            }
            
            public void SetnY1Null() {
                this[this.tabletbRelatorioLinhas.nY1Column] = System.Convert.DBNull;
            }
            
            public bool IsnX2Null() {
                return this.IsNull(this.tabletbRelatorioLinhas.nX2Column);
            }
            
            public void SetnX2Null() {
                this[this.tabletbRelatorioLinhas.nX2Column] = System.Convert.DBNull;
            }
            
            public bool IsnY2Null() {
                return this.IsNull(this.tabletbRelatorioLinhas.nY2Column);
            }
            
            public void SetnY2Null() {
                this[this.tabletbRelatorioLinhas.nY2Column] = System.Convert.DBNull;
            }
            
            public bool IsnEspessuraNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.nEspessuraColumn);
            }
            
            public void SetnEspessuraNull() {
                this[this.tabletbRelatorioLinhas.nEspessuraColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorRNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.nCorRColumn);
            }
            
            public void SetnCorRNull() {
                this[this.tabletbRelatorioLinhas.nCorRColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorGNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.nCorGColumn);
            }
            
            public void SetnCorGNull() {
                this[this.tabletbRelatorioLinhas.nCorGColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorBNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.nCorBColumn);
            }
            
            public void SetnCorBNull() {
                this[this.tabletbRelatorioLinhas.nCorBColumn] = System.Convert.DBNull;
            }
            
            public bool IsbVisivelImpressaoNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.bVisivelImpressaoColumn);
            }
            
            public void SetbVisivelImpressaoNull() {
                this[this.tabletbRelatorioLinhas.bVisivelImpressaoColumn] = System.Convert.DBNull;
            }
            
            public bool IsnGrupoNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.nGrupoColumn);
            }
            
            public void SetnGrupoNull() {
                this[this.tabletbRelatorioLinhas.nGrupoColumn] = System.Convert.DBNull;
            }
            
            public bool IsnEstilo_canetaNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.nEstilo_canetaColumn);
            }
            
            public void SetnEstilo_canetaNull() {
                this[this.tabletbRelatorioLinhas.nEstilo_canetaColumn] = System.Convert.DBNull;
            }
            
            public bool IsnEstilo_linhaNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.nEstilo_linhaColumn);
            }
            
            public void SetnEstilo_linhaNull() {
                this[this.tabletbRelatorioLinhas.nEstilo_linhaColumn] = System.Convert.DBNull;
            }
            
            public bool IsnCorRGBNull() {
                return this.IsNull(this.tabletbRelatorioLinhas.nCorRGBColumn);
            }
            
            public void SetnCorRGBNull() {
                this[this.tabletbRelatorioLinhas.nCorRGBColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tbRelatorioLinhasRowChangeEvent : EventArgs {
            
            private tbRelatorioLinhasRow eventRow;
            
            private DataRowAction eventAction;
            
            public tbRelatorioLinhasRowChangeEvent(tbRelatorioLinhasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tbRelatorioLinhasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
